package com.elams.entities;

import jakarta.persistence.*;
import jakarta.validation.constraints.FutureOrPresent;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Positive;
import lombok.*;
import java.time.LocalDate;
import java.time.LocalTime;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Entity class representing a shift in the shift management system.
 * This class maps to the "shift_management_table" in the database.
 * It contains details about a shift, such as its ID, the employee assigned to it,
 * the date of the shift, and the time of the shift.
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name="shift_management_table")
public class Shift {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="shift_id", nullable=false)
    @Schema(name = "shiftId", description = "Autogenerated value, should not be added.", defaultValue = "null", requiredMode = Schema.RequiredMode.NOT_REQUIRED, hidden = true)
    private Long shiftId;
    
    @Column(name="employee_id")
    @NotNull(message = "Employee Id is required")
    @Positive(message = "Employee Id must be a positive number")
    @Schema(name = "employeeId", description = "Should be a valid Employee Id", requiredMode = Schema.RequiredMode.REQUIRED)
    private Long employeeId;
    
    @Column(name="shift_date")
    @NotNull(message = "Shift date is required")
    @FutureOrPresent(message = "Shift date must be in the present or future")
    @Schema(name = "shiftDate", description = "Represents the shift date of Employee, should be valid Date in YYYY-MM-DD format", requiredMode = Schema.RequiredMode.REQUIRED)
    private LocalDate shiftDate;
    
    @Column(name="shift_time")
    @NotNull(message = "Shift time is required")
    @Schema(name = "shiftTime", description = "Represents the shift time of Employee, should be valid time in HH:MM:SS format", type = "string", example = "23:00:00", requiredMode = Schema.RequiredMode.REQUIRED)
    private LocalTime shiftTime;
}